\documentclass[12pt]{article}

\usepackage{bm}
\usepackage{amsmath, mathtools}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{graphicx}
\usepackage{colortbl}
\usepackage{xr}
\usepackage{hyperref}
\usepackage{longtable}
\usepackage{xfrac}
\usepackage{tabularx}
\usepackage{float}
\usepackage{siunitx}
\usepackage{booktabs}
\usepackage{multirow}
\usepackage[section]{placeins}
\usepackage{caption}
\usepackage[usenames,dvipsnames]{xcolor}


%\usepackage{refcheck}

\hypersetup{
    bookmarks=true,         % show bookmarks bar?
      colorlinks=true,       % false: boxed links; true: colored links
    linkcolor=red,          % color of internal links (change box color with 
%linkbordercolor)
    citecolor=green,        % color of links to bibliography
    filecolor=magenta,      % color of file links
    urlcolor=cyan           % color of external links
}
\newif\ifcomments\commentstrue
\ifcomments
\newcommand{\authornote}[3]{\textcolor{#1}{[#3 ---#2]}}
\newcommand{\todo}[1]{\textcolor{red}{[TODO: #1]}}
\else
\newcommand{\authornote}[3]{}
\newcommand{\todo}[1]{}
\fi

\newcommand{\wss}[1]{\authornote{magenta}{SS}{#1}}
\newcommand{\nd}[1]{\authornote{blue}{ND}{#1}}
\newcommand{\ah}[1]{\authornote{violet}{AH}{#1}}

\newcommand{\NN}[1]{{\color{red}#1}}
\newcommand{\WSS}[1]{{\color{blue}#1}}

\newcommand{\colZwidth}{1.0\textwidth}
\newcommand{\blt}{- } %used for bullets in a list
\newcommand{\colAwidth}{0.13\textwidth}
\newcommand{\colBwidth}{0.82\textwidth}
\newcommand{\colCwidth}{0.1\textwidth}
\newcommand{\colDwidth}{0.05\textwidth}
\newcommand{\colEwidth}{0.8\textwidth}
\newcommand{\colFwidth}{0.17\textwidth}
\newcommand{\colGwidth}{0.5\textwidth}
\newcommand{\colHwidth}{0.28\textwidth}
\newcounter{defnum} %Definition Number
\newcommand{\dthedefnum}{GD\thedefnum}
\newcommand{\dref}[1]{GD\ref{#1}}
\newcounter{datadefnum} %Datadefinition Number
\newcommand{\ddthedatadefnum}{DD\thedatadefnum}
\newcommand{\ddref}[1]{DD\ref{#1}}
\newcounter{theorynum} %Theory Number
\newcommand{\tthetheorynum}{T\thetheorynum}
\newcommand{\tref}[1]{T\ref{#1}}
\newcounter{tablenum} %Table Number
\newcommand{\tbthetablenum}{T\thetablenum}
\newcommand{\tbref}[1]{TB\ref{#1}}
\newcounter{assumpnum} %Assumption Number
\newcommand{\atheassumpnum}{P\theassumpnum}
\newcommand{\aref}[1]{A\ref{#1}}
\newcounter{goalnum} %Goal Number
\newcommand{\gthegoalnum}{P\thegoalnum}
\newcommand{\gsref}[1]{GS\ref{#1}}
\newcounter{instnum} %Instance Number
\newcommand{\itheinstnum}{IM\theinstnum}
\newcommand{\iref}[1]{IM\ref{#1}}
\newcounter{reqnum} %Requirement Number
\newcommand{\rthereqnum}{P\thereqnum}
\newcommand{\rref}[1]{R\ref{#1}}
\newcounter{lcnum} %Likely change number
\newcommand{\lthelcnum}{LC\thelcnum}
\newcommand{\lcref}[1]{LC\ref{#1}}

\newcommand{\tclad}{T_\text{CL}}
\newcommand{\degree}{\ensuremath{^\circ}}
\newcommand{\progname}{PolyHarmonics}

\newcounter{mnum}
\newcommand{\mthemnum}{M\themnum}
\newcommand{\mref}[1]{M\ref{#1}}


%\oddsidemargin 0mm
%\evensidemargin 0mm
%\textwidth 160mm
%\textheight 200mm
\usepackage{fullpage}


\begin{document}

\title{Module Interface Specification for \progname{}} 
\author{Nolan Driessen}
\date{\today}
	
\maketitle

\tableofcontents
 
\section{Introduction}

The following document details the Module Interface Specifications for the
implemented modules in \progname{}.  It is intended to ease navigation through
the program for design and
maintenance purposes.\\
Complementary documents include the System Requirement Specifications and Module
Guide.


\section{Module Hierarchy}
The following table is taken directly from the Module Guide document for this 
project.
\begin{table}[h!]
\centering
\caption{Module Hierarchy}
\begin{tabular}{p{0.3\textwidth} p{0.4\textwidth} p{0.3\textwidth}}
\toprule
\textbf{Level 1} & \textbf{Level 2} & \textbf{Level 3}\\
\midrule

{Hardware-Hiding Module} & ~ \\
\midrule
\multirow{7}{0.3\textwidth}{Behaviour-Hiding Module}
& \multirow{2}{0.3\textwidth}{Input Module} 
& Input Finding Module\\ 
& & Input Data Module\\  
& Transformed Signal Data Module\\ 
& Plot Data Module\\ 
& Control Module\\ 
& Output Module\\ 
& Filtered Data Module\\
\midrule
\multirow{3}{0.3\textwidth}{Software Decision Module}
&Signal Transforming Module\\
& Filtering Module\\
\bottomrule
\end{tabular}
\label{TblMH}
\end{table}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{MIS of Control Module}

\subsection{Module Name: main}

\subsection{Uses}

%\subsubsection{Imported Constants}

%\subsubsection{Imported Variables}

\subsubsection{Imported Data Types}


\subsubsection{Imported Access Programs}
\textbf{Uses} Input Finding Module \textbf{Imports} parameterSearch\\
\textbf{Uses} Signal Transform Module \textbf{Imports} transform\\
\textbf{Uses} Plot Data Module \textbf{Imports} plot\\
\textbf{Uses} Output Module \textbf{Imports} output\\
\textbf{Uses} Filtering Module \textbf{Imports} filter\\

\subsection{Interface Syntax}

%\subsubsection{Exported Constants}

%\subsubsection{Exported Variables}

\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}

\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
main & -- & -- & Files not found\\
\hline
\end{tabular}
\end{center}


\subsection{Interface Semantics}

\subsubsection{State Variables}

\subsubsection{Environment Variables}
path : Location of the directory to be searched for TDMS files.\\
win: 2D sequence of pixels displayed on screen

\subsubsection{Assumption}
%Assumptions from SRS?
	

\subsubsection{Invariant}
None

\subsubsection{Access Program Semantics}

Main consists of a sequence of calls to other modules access programs. The 
sequence is as follows: InputFinding : parameterSearch, Signal Transform Module 
: transform, Plot Data Module : plot, Output Module : output and 
Filtering Module : filter. Main will call each of these access programs for a 
specific set of tests which it will identify through the use of the ``path" 
environment variable. Additionally Main will print messages by modifying the 
``win" environment variable to communicate any errors or warnings as necessary.

\nd{Commented out the old structure and replaced with a general description}

\wss{The general description is on the right track, but I think you want to be a
  bit more specific.  What is the sequence of modules that will be used?  Could
  you write this in terms of the access programs from these other modules?}
%\noindent \textbf{Input:}\\
%Main.py will handle controlling the flow of the program.
%It will verify the input for the system.\\
%
%\wss{You said that there were no inputs to main.py?}
%
%\wss{You do not need an input and output field.   You can just explain what
%  happens when main is called.  The sequence of calls to other programs 
%seems to
%  be fine.  If there are errors, then I assume that main will modify the 
%``win''
%  environment variable.}
%
%\noindent \textbf{Exceptions:}\\
%Potential exceptions may occur within each module used by Main.py. \\
%
%\noindent \textbf{Output:}\\
%Main.py will print to the screen messages regarding the flow of the system.\\
%Main will request the Output Format Module to produce files regarding the 
%details found within the input directory.\\
%Main will request the Plotting Module to produce amplitude and frequency 
%graphs.

%\subsubsection{Local Functions}

%\subsubsection{Local Data Types}

%\subsubsection{Local Constants}

%\subsubsection{Considerations}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{MIS of Input Finding Module}
\subsection{Module Name: InputFinding}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\textbf{Uses} Input Data Module \textbf{Imports} Set\_Start\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Set\_Stop\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Set\_Step\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Set\_TDMS\_Time\\
\textbf{Uses} Input Data Module \textbf{Imports} Set\_TDMS\_Data
\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
parameterSearch & string & InputData %TODO	change maybe 
& Start\_Freq out of range\\
& & & Stop\_Freq out of range\\
& & & Step\_Freq out of range\\
\hline
\end{tabular}
\end{center}
\nd{Should I include the amplitude being too low? Its a warning not an
exception but I feel it should be mentioned somewhere.}\\
\nd{ Additionally the rest
of the exceptions will deal with the data within the TDMS files and Im unsure
what exceptions can come up due to this. Will have to talk to Felipe but I 
cant get in contact with him lately}
\subsection{Interface Semantics}
%Params is a data structure that will be given to the Input Format module to be
%formatted in order for the rest of the system to use.
\subsubsection{State Variables}
\subsubsection{Environment Variables}
TDMSFile : A set of files to be read.

\subsubsection{Assumption}
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
parameterSearch will collect the input for the system in order for InputData 
to organize it. For each file within the ``TDMSFile" environment variable it 
will read and store the information into a list for the InputData module to use,
along with a start stop and step frequency for the set. parameterSearch will
 use the access programs provided by InputData in order to populate the state of 
InputData.

\wss{Explicitly mention that the state of input format will be changed.  These
  module names do not match what is in your MG.  Is InputFormat the Input Data
  module?  I like the name Input Data better, since InputFormat implies input
  format hiding, which seems to beh the job of Input Finding.  I see that you
  use both the names Input Data module and InputFormat.  Why have two names?}
  
\nd{Changed the name of each module to match, additionally wrote about changing
the state in terms of state variables. Can be more specific if it would be 
better, ie) uses Set\_Start\_Freq to assign a value to the starting frequency
but I believe that is apparent from the imported access programs.}
  
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{MIS of Input Data Module}
\subsection{Module Name: InputData}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}

\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}


\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
Set\_Start\_Freq & int & -- & --\\
Set\_Stop\_Freq & int & -- & --\\
Set\_Step\_Freq & int & -- & --\\
Set\_TDMS\_Time & list of lists & -- & --\\
Set\_TDMS\_Data & list of lists & -- & --\\

Get\_Start\_Freq & -- & int & --\\
Get\_Stop\_Freq & -- & int & --\\
Get\_Step\_Freq & -- & int & --\\
Get\_TDMS\_Time & -- & list of lists & --\\
Get\_TDMS\_Data & -- & list of lists & --\\
\hline
\end{tabular}
\end{center}
\subsection{Interface Semantics}
\subsubsection{State Variables}
Start\_Freq : int\\
Stop\_Freq : int\\
Step\_Freq : int\\
TDMS\_Time : list of lists\\
TDMS\_Data : list of lists\\

  
\subsubsection{Environment Variables}
\subsubsection{Assumption}
None of the Get access programs will be called before their respective
Set function.
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\begin{itemize}
\item[Set:]
\textbf{Input:}
Each Set function will take a parameter as input according to which function was 
called.\\
\textbf{Transition:}
Each set function will modify the state of the corresponding parameter.

\item[Get:]
\textbf{Input:}
Each Get function requires no input\\
\textbf{Output:} Each Get function will return the value of the corresponding 
parameter.
\end{itemize}
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constraints}
%\subsubsection{Considerations}


\section{MIS of Transformed Signal Data Module}
\subsection{Module Name: TransformedSignalData}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}

\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}

\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
Set\_Original\_Transformed\_Data &  list of lists & -- & 
-- \\
Set\_Filtered\_Transformed\_Data &  list of lists & -- & 
-- \\
Set\_Original\_Frequency\_Data &  list of lists & -- & 
-- \\
Set\_Filtered\_Frequency\_Data &  list of lists & -- & 
-- \\
Get\_Original\_Transformed\_Data &  -- & list of lists & 
-- \\
Get\_Filtered\_Transformed\_Data &  -- & list of lists & 
-- \\
Get\_Original\_Frequency\_Data &  -- & list of lists & 
-- \\
Get\_Filtered\_Frequency\_Data &  -- & list of lists & 
-- \\
\hline
\end{tabular}
\end{center}
\subsection{Interface Semantics}
\subsubsection{State Variables}
Original\_Transformed\_Data : list of lists\\
Filtered\_Transformed\_Data : list of lists\\
Original\_Frequency\_Data : list of lists\\
Filtered\_Frequency\_Data : list of lists
\subsubsection{Environment Variables}
\subsubsection{Assumption}
None of the Get access programs will be called before their respective
Set function.
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\begin{itemize}

\item[\textbf{Set:}]
\textbf{Input:}
Each Set function will take a parameter as input according to which
function was called.\\
\textbf{Transition:}
Each Set function will modify the state of the corresponding parameter.
 
\item[\textbf{Get:}]
\textbf{Input:}
Each Get function requires no input.\\
\textbf{Output:}
Each Get function will return the value of the corresponding parameter.
 \end{itemize}
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}


\section{MIS of Signal Transform Module}
\subsection{Module Name: SignalTransform}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Time\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Data\\
\textbf{Uses} Filtered Data Module \textbf{Imports} 
Get\_Detailed\_Coefficients\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Set\_Original\_Transformed\_Data\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Set\_Filtered\_Transformed\_Data\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Set\_Original\_Frequency\_Data\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Set\_Filtered\_Frequency\_Data

\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}

\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
transform & class & class %TODO	change maybe 
& --\\
\hline
\end{tabular}
\end{center}

\subsection{Interface Semantics}
\subsubsection{State Variables}
\subsubsection{Environment Variables}
\subsubsection{Assumption}
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\textbf{Input:}\\
The SignalTransform Module requires the TDMS files formatted into the proper
data structure by the Input Data Module as well as the filtered data 
from the Filtered Data Module.\\
\textbf{Transition:}\\
The Transforming Module will modify the state of the Transformed Signal Data
Module through its access programs and return the fully populated
TransformedSignalData class. 
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}

\section{MIS of Plot Data Module}
\subsection{Module Name: PlotData}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Start\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Stop\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Step\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Time\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Data\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Get\_Original\_Transformed\_Data\\
\textbf{Uses} Transformed Signal Data Module \textbf{Imports} 
Get\_Original\_Frequency\_Data
\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}


\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
plot & list of lists & -- & --\\
\hline
\end{tabular}
\end{center}
\subsection{Interface Semantics}
\subsubsection{State Variables}
  
\subsubsection{Environment Variables}
plots : A set of files that will be modified to each have a plot of an
input signal and its transformed frequency. 
\subsubsection{Assumption}
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\textbf{Input:}\\
plot will accept a series of parameters from its imported access
programs.\\
\textbf{Transition:}\\
plot will use the input given to it in order to modify each element of
the ``plots" environment variable.
\nd{Should i give more detail. Such as that each element will contain two plots? The contents of the plots?}
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}

\section{MIS of Output Module}
\subsection{Module Name: Output}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Start\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Stop\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_Step\_Freq\\
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Data\\
\textbf{Uses} Transformed Signal Data Module 
\textbf{Imports} Get\_Original\_Transformed\_Data\\
\textbf{Uses} Transformed Signal Data Module 
\textbf{Imports} Get\_Filtered\_Transformed\_Data\\
\textbf{Uses} Transformed Signal Data Module 
\textbf{Imports} Get\_Original\_Frequency\_Data\\
\textbf{Uses} Transformed Signal Data Module 
\textbf{Imports} Get\_Filtered\_Frequency\_Data\\
\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}
\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
output & int,list of lists & -- & --\\
\hline
\end{tabular}
\end{center}
\subsection{Interface Semantics}
\subsubsection{State Variables}
\subsubsection{Environment Variables}
output\_txt : A series of text files that Output will create.
\subsubsection{Assumption}
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\textbf{Input:}\\
The Output Module requires data from the Input Data module and the
 Transformed Signal Data 
module which it will receive through their access programs.\\
\textbf{Transition:}\\
The Output Module modifies its ``output\_txt" environment variable by 
producing three text files.
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}



\section{MIS of Filtering Module}
\subsection{Module Name: Filtering}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\textbf{Uses} Input Data Module \textbf{Imports} Get\_TDMS\_Data\\
\textbf{Uses} Filtered Data Module 
\textbf{Imports} Set\_Approximate\_Coefficients\\
\textbf{Uses} Filtered Data Module 
\textbf{Imports} Set\_Detailed\_Coefficients
\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
filter & -- & -- & --\\
\hline
\end{tabular}
\end{center}
\subsection{Interface Semantics}
\subsubsection{State Variables}
\subsubsection{Environment Variables}
\subsubsection{Assumption}
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\textbf{Input}:\\
The Filtering Module requires the data stored within the the Input Data
Module which it will acquire through its access programs.\\
\textbf{Transition}:\\
The Filtering Module will populate the state of the Filtered Data Module through 
use of its access programs.
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}



\section{MIS of Filtered Data Module}
\subsection{Module Name: FilteredData}
\subsection{Uses}
%\subsubsection{Imported Constants}
%\subsubsection{Imported Variables}
\subsubsection{Imported Data Types}

\subsubsection{Imported Access Programs}
\subsection{Interface Syntax}
%\subsubsection{Exported Constants}
%\subsubsection{Exported Variables}
\subsubsection{Exported Data Types}

\subsubsection{Exported Access Programs}
\begin{center}
\begin{tabular}{l l l l}
\hline
\textbf{Name} & \textbf{In} & \textbf{Out} & \textbf{Exceptions} \\ \hline
Set\_Approximate\_Coefficients  & list of lists & -- & --\\
Set\_Detailed\_Coefficients  & list of lists & -- & --\\
Get\_Approximate\_Coefficients  & -- & list of lists & 
-- \\
Get\_Detailed\_Coefficients  & -- & list of lists & 
-- \\
\hline
\end{tabular}
\end{center}

\subsection{Interface Semantics}
\subsubsection{State Variables}
Approximate\_Coefficients : list of lists\\
Detailed\_Coefficients : lists of lists
\subsubsection{Environment Variables}
\subsubsection{Assumption}
None of the Get access programs will be called before their respective
Set function.
\subsubsection{Invariant}
\subsubsection{Access Program Semantics}
\begin{itemize}

\item[\textbf{Set:}]
\textbf{Input:}
Each Set function will take a parameter as input according to which
function was called.\\
\textbf{Transition:}
Each Set function will modify the state of the corresponding parameter.
 
\item[\textbf{Get:}]
\textbf{Input:}
Each Get function requires no input.\\
\textbf{Output:}
Each Get function will return the value of the corresponding parameter.
 \end{itemize}
%\subsubsection{Local Functions}
%\subsubsection{Local Data Types}
%\subsubsection{Local Constants}
%\subsubsection{Considerations}

\newpage
\appendix
\section{Exceptions} \label{appx}

\begin{table}[!h]
\caption{Possible Exceptions} \label{TblInputVar}
\renewcommand{\arraystretch}{1.2}
\noindent \begin{longtable*}{l l} 
  \toprule
  \textbf{Message ID} & \textbf{Error Message}\\
  \midrule
Files not found				& error: The given directory contains no files 
suitable for analysis\\
Start\_Freq out of range	& error: Start Frequency must be $> 0$\\
Start\_Freq out of range	& error: Stop Frequency must be $> 0$\\
Start\_Freq out of range	& error: Step Frequency must be $> 0$\\
  \bottomrule
\end{longtable*}
\end{table}

\end{document}













