\documentclass[12pt]{article}

\usepackage{bm}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{graphicx}
\usepackage{colortbl}
\usepackage{xr}
\usepackage{hyperref}
\usepackage{longtable}
\usepackage{xfrac}
\usepackage{tabularx}
\usepackage{float}
\usepackage{siunitx}
\usepackage{booktabs}

%\usepackage{refcheck}

\hypersetup{
      colorlinks=true,       % false: boxed links; true: colored links
    linkcolor=red,          % color of internal links (change box color with linkbordercolor)
    citecolor=green,        % color of links to bibliography
    filecolor=magenta,      % color of file links
    urlcolor=cyan           % color of external links
}
\newif\ifcomments\commentstrue
\ifcomments
\newcommand{\authornote}[3]{\textcolor{#1}{[#3 ---#2]}}
\newcommand{\todo}[1]{\textcolor{red}{[TODO: #1]}}
\else
\newcommand{\authornote}[3]{}
\newcommand{\todo}[1]{}
\fi

\newcommand{\wss}[1]{\authornote{magenta}{SS}{#1}}
\newcommand{\nd}[1]{\authornote{blue}{ND}{#1}}
\newcommand{\ah}[1]{\authornote{violet}{AH}{#1}}

\newcommand{\colZwidth}{1.0\textwidth}
\newcommand{\blt}{- } %used for bullets in a list
\newcommand{\colAwidth}{0.13\textwidth}
\newcommand{\colBwidth}{0.82\textwidth}
\newcommand{\colCwidth}{0.1\textwidth}
\newcommand{\colDwidth}{0.05\textwidth}
\newcommand{\colEwidth}{0.8\textwidth}
\newcommand{\colFwidth}{0.17\textwidth}
\newcommand{\colGwidth}{0.5\textwidth}
\newcommand{\colHwidth}{0.28\textwidth}
\newcounter{defnum} %Definition Number
\newcommand{\dthedefnum}{GD\thedefnum}
\newcommand{\dref}[1]{GD\ref{#1}}
\newcounter{datadefnum} %Datadefinition Number
\newcommand{\ddthedatadefnum}{DD\thedatadefnum}
\newcommand{\ddref}[1]{DD\ref{#1}}
\newcounter{theorynum} %Theory Number
\newcommand{\tthetheorynum}{T\thetheorynum}
\newcommand{\tref}[1]{T\ref{#1}}
\newcounter{tablenum} %Table Number
\newcommand{\tbthetablenum}{T\thetablenum}
\newcommand{\tbref}[1]{TB\ref{#1}}
\newcounter{assumpnum} %Assumption Number
\newcommand{\atheassumpnum}{P\theassumpnum}
\newcommand{\aref}[1]{A\ref{#1}}
\newcounter{goalnum} %Goal Number
\newcommand{\gthegoalnum}{P\thegoalnum}
\newcommand{\gsref}[1]{GS\ref{#1}}
\newcounter{instnum} %Instance Number
\newcommand{\itheinstnum}{IM\theinstnum}
\newcommand{\iref}[1]{IM\ref{#1}}
\newcounter{reqnum} %Requirement Number
\newcommand{\rthereqnum}{P\thereqnum}
\newcommand{\rref}[1]{R\ref{#1}}
\newcounter{lcnum} %Likely change number
\newcommand{\lthelcnum}{LC\thelcnum}
\newcommand{\lcref}[1]{LC\ref{#1}}

\newcommand{\tclad}{T_\text{CL}}
\newcommand{\degree}{\ensuremath{^\circ}}
\newcommand{\progname}{PolyHarmonics}


\usepackage{fullpage}

\begin{document}

\title{Verification and Validation Plan for \progname{}} 
\author{Nolan Driessen}
\date{\today}
	
\maketitle

\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%
%
%	1.) General Information 
%
%%%%%%%%%%%%%%%%%%%%%%%%

\section{General Information}
The following section provides an overview of the Verification and Validation (V\&V) Plan 
for \progname{}. This section explains the purpose of this
document, the scope of the system, common definitions, acronyms and abbreviations that are used
in the document, and an overview of the following sections

%1.1 Purpose
\subsection{Purpose}
The main purpose of this document is to describe the verification and validation 
process that will be used to test \progname{}.
This document is intended to be used as a reference for all future testing and will
be used to increase confidence in the software implementation.  

This document will be used as a starting point for the verification and validation report. The 
test cases presented within this document will be executed and the output will be analyzed to 
determine if the software is implemented correctly.  


%1.2 Scope
\subsection{Scope}


%1.3  Definitions, Acronyms, and abbreviations 
\subsection{Definitions, Acronyms, and Abbreviations }

\renewcommand{\arraystretch}{1.2}
\begin{tabular}{l l} 
  \toprule		
  \textbf{symbol} & \textbf{description}\\
  \midrule 
  QA		& Quality assurance\\
  SRS		& Software requirements specification\\
  V\&V		& Verification and validation\\
  V\&VP 	& Verification and validation plan\\
  V\&VR 	& Verification and validation report\\
  \bottomrule
\end{tabular}

%1.4 Overview of Document
\subsection{Overview of Document }
The following sections provide more detail about the V\&V of \progname{}. Information about the testing process is provided, and the software specifications
that were discussed in the SRS document are stated.  The evaluation process that will be followed during 
testing is outlined, and test cases for both the system testing and unit testing are provided 

%%%%%%%%%%%%%%%%%%%%%%%%
%
%	2.) Plan
%
%%%%%%%%%%%%%%%%%%%%%%%%

\section{Plan}
This section provides a description of the software that is being tested, the team that will
perform the testing, the milestones for the testing phase, and the budget allocated to the testing. 

%2.1 Software Description
\subsection{Software Description}
The software being tested is designed for acoustic analysis. Given a LabVIEW file for input, the software will analyze the signals present within the file in terms of its frequency and amplitude.

%2.2 Test Team
\subsection{Test Team} 
The team that will execute the test cases, write and review the V\&VR consist of:

\begin{itemize}
 \item Nolan Driessen
 \item Dr. Spencer Smith
 \item Alex Halliwushka. 
\end{itemize}  

%2.3 Milestones
\subsection{Milestones}

%2.3.1 Location
\subsubsection{Location}
The location that the testing will be performed is Hamilton Ontario. The institution that
will be performing the testing is McMaster University. 


%2.3.1 Dates and Deadlines
\subsubsection{Dates and Deadlines}
Test Case:\newline
The creation of the test cases for both system testing and unit testing is scheduled to begin June $1^\text{st}$ 2015. %TODO put appropriate date in
The deadline for the creation of the test cases is June 15th 2015.  %TODO put appropriate date in
~\newline
~\newline
Test Case Implementation:
~\newline
Implementing code for the automation of the unit testing is scheduled to begin June 15th 2015. The implementation period %TODO change both dates
is expected to last approximately two weeks and has a deadline of June 30th 2015.
~\newline
~\newline
Verification and Validation Report:
~\newline
The writing of the V\&VR is scheduled to begin July 1st 2015 and end on July 15th 2015.  %TODO change both dates again

%2.4 Budget
\subsection{Budget}
The budget for the testing of this system is being funded by McMaster University and NSERC

%%%%%%%%%%%%%%%%%%%%%%%%
%
%	3.) Software Specification
%
%%%%%%%%%%%%%%%%%%%%%%%%

\section{ Software Specification}
This section provides the functional requirements, the business tasks that the
software is expected to complete, and the non-functional requirements, the
qualities that the software is expected to exhibit.

%3.1 Functional Requirements
\subsection{Functional Requirements}
%TODO	compare with SRS, just copy and paste?

\noindent \begin{itemize}
\item The product shall receive a LabVIEW TDMS file as input.
\item The product shall verify the input contains acceptable information.
\item \progname{} shall use the input file to calculate the DFT. 
\item Using the transformed data, create a plot and text file holding information about the signal.

\end{itemize}

%3.2 Nonfunctional Requirements
%TODO	add non func, should i put the whole list here?
\subsection{Non-functional Requirements}
Games are very resource intensive, so performance is a high priority.
Other non-functional requirements that are a priority are: correctness,
understandability, portability, reliability, and maintainability. 


%%%%%%%%%%%%%%%%%%%%%%%%
%
%	4.) Evaluation
%
%%%%%%%%%%%%%%%%%%%%%%%%

\section{Evaluation}
This section first presents the methods and constraints that are to be used during
the evaluation process. This is followed by how the data obtained by the testing will be 
evaluated, which includes: how the data will be recorded, how to move from one test
to the next, and how to determine if the test was successful. 

%4.1 Methods and Constraints
\subsection{ Methods and Constraints} 

%4.1.1 Methodology
\subsubsection{Methodology} 
The testing of \progname{} will be separated into two sections: system testing and unit testing.

The system testing will be done manually, the tester will set up the initial conditions as described in the test cases
and compare the actual results of the test to the expected results. If the results match then the test passed, otherwise
the test failed.  

The unit testing will be automated. The tester will implement the unit tests into the code using a unit testing framework. Once 
the unit tests are implemented, the software will be run and any incorrect results will be outputted by the system

% 4.1.2 Extent of Testing
\subsubsection{Extent of Testing}
The extent of testing that will be employed is extensive testing. The unit test cases below provide complete code coverage and 
will increase confidence in the verification of the software. The system test cases increase confidence in the validation of the system

% 4.1.3 Test Tools
\subsubsection{Test Tools}
A unit testing framework will be used to implement the unit test cases and run them automatically.

% 4.1.4 Testing Constraints
\subsubsection{ Testing Constraints}
There are currently no anticipated limitations on the testing

% 4.2  Data Evaluation
\subsection{ Data Evaluation}

% 4.2.1 Data Recording
\subsubsection{Data Recording}
After each test is run the results of the test should be recorded in the following format: 
~\newline
Test ID: 
~\newline
Input:
~\newline
Expected Output:
~\newline
Actual Output:
~\newline
Result: 

% 4.2.2 Test Progression
\subsubsection{Test Progression}

For the system test cases: Follow the preparation instructions given for the test case to get the system
initialized correctly. Follow the procedures given for the test case and use the inputs provided. Run the test and
record the results, record any discrepancies between the actual output and the expected output. Move on to the next
test case and repeat the process again.

% 4.2.3 Testing Criteria
\subsubsection{ Testing Criteria}
The actual results of each test will be evaluated against the expected results to see if the software is working as 
intended.

% 4.2.4 Test Data Reduction
\subsubsection{ Testing Data Reduction}
The results of the test data will be evaluated on a PASS/FAIL basis. If the actual results match the expected
results the test will be considered a PASS, otherwise the test is considered a FAIL. 


%%%%%%%%%%%%%%%%%%%%%%%%
%
%	5.) System Test Description
%
%%%%%%%%%%%%%%%%%%%%%%%%

\section{System Test Description}


%5.x Test identifier 
\subsection{Test 1}

% 5.x.1 Means of Control
\subsubsection{Means of Control}
Manual
% 5.x.2 Input
\subsubsection{Input} \label{Input_Grade0}
Input files found within the testing/set 1/ Grade 0 folder\\
Start\_Freq = 100\\
Stop\_Freq = 1000\\
Step\_Freq = 100

% 5.x.3 Expected Output
\subsubsection{Expected Output}
The set of text files and plots shall pass the following assert statements:\\
assert filecmp.cmp(`output/newPlot',`standardTestCaseOutput/oldPlot'),
 `Error: Entry i failed the comparison'\\
\nd{Is this an acceptable format? If so ill properly name all files for each
of the 10 plots and the 3 text files.}
% 5.x.4 Test  Procedures
\subsubsection{Procedure}
Determine if the plots and text files produced match the expected output. 
% 5.x.5  Preparation
\subsubsection{Preparation}
The user shall enter the directory and frequency values defined in the
 \hyperref[Input_Grade0]{Input} section.

%%%%%%%%%%%%%%%%%%%%%%%%
%
%	6.) Unit Test Description 
%
%%%%%%%%%%%%%%%%%%%%%%%%
\section{Unit Test Description}


\subsection{Input Finding Module}

\subsubsection{Module Inputs}
Start\_Freq\\
Stop\_Freq\\
Step\_Freq\\
Path to a set of TDMS files
\subsubsection{Module Outputs}
None

\subsubsection{Related Modules}
Control Module\\
Input Data Module
\subsubsection{Test Data}

\subsubsection{Inputs}
Start\_Freq = 100\\
Stop\_Freq = 1000\\
Step\_Freq = 100\\
Path = \nd{Fill in once I have a concrete location for this}
\subsubsection{Expected Outputs}
Transitions InputData class to fully populate its state.


\subsection{Input Data Module}

\subsubsection{Module Inputs}
Start\_Freq\\
Stop\_Freq\\
Step\_Freq\\
TDMS\_Data\\
TDMS\_Time
\subsubsection{Module Outputs}
Start\_Freq\\
Stop\_Freq\\
Step\_Freq\\
TDMS\_Data\\
TDMS\_Time
\subsubsection{Related Modules}
Signal Transform Module\\
Input Finding Module\\
Filtering Module\\
Output Module\\
Plot Data Module
\subsubsection{Test Data}

\subsubsection{Inputs}
Start\_Freq = 100\\
Stop\_Freq = 1000\\
Step\_Freq = 100\\
TDMS\_Data = \nd{Too long to list}\\
TDMS\_Time = \nd{Too long to list}

\subsubsection{Expected Outputs}
InputData class such that none of the below tests error:\\
assert Get\_Start\_Freq() == 100\\
assert Get\_Stop\_Freq() == 1000\\
assert Get\_Step\_Freq() == 100\\

\nd{Unsure how to show the 2 10x10000 lists. I could check every element,
but I cannot list it here.}


\subsection{Signal Transform Module}
\nd{As this is implemented by numpy Im skipping this for now. Unsure how to
test this other than the FFT which we have agreed is not necessary.}
\subsubsection{Module Inputs}

\subsubsection{Module Outputs}

\subsubsection{Related Modules}

\subsubsection{Test Data}

\subsubsection{Inputs}

\subsubsection{Expected Outputs}




\subsection{Transformed Signal Data Module}
\nd{All the inputs and outputs of this module are the 10x10000 lists unsure
the best plan to indicate testing}
\subsubsection{Module Inputs}
List
\subsubsection{Module Outputs}
List
\subsubsection{Related Modules}
Signal Transform Module\\
Output Module\\
Plot Data Module
\subsubsection{Test Data}

\subsubsection{Inputs}
List
\subsubsection{Expected Outputs}
List

\subsection{Plot Data Module}

\subsubsection{Module Inputs}
Start\_Freq\\
Stop\_Freq\\
Step\_Freq\\
TDMS\_Time\\
TDMS\_Data\\
Original\_Transformed\_Data
Original\_Frequency\_Data
\subsubsection{Module Outputs}
\nd{Plots? Modifies the files but thats an environment variable}
\subsubsection{Related Modules}
Input Data Module
Transformed Signal Data Module
Control Module
\subsubsection{Test Data}

\subsubsection{Inputs}

\subsubsection{Expected Outputs}
A set of png files such that for each file the following will return true
when compared with the plots from the standard test case:\\\\
filecmp.cmp(newplot,testplot,False)


\subsection{Output Module}

\subsubsection{Module Inputs}
Start\_Freq\\
Stop\_Freq\\
Step\_Freq\\
TDMS\_Data\\
Filtered\_Data

\subsubsection{Module Outputs}
\nd{Same as plot module, no output but modifies environment variable}
\subsubsection{Related Modules}
Input Data Module
Filtered Data Module
\subsubsection{Test Data}

\subsubsection{Inputs}
Start\_Freq = 100\\
Stop\_Freq = 1000\\
Step\_Freq 100\\
TDMS\_Data\\
Filtered\_Data
\subsubsection{Expected Outputs}
A set of text files such that for each file the following will return true
when compared with the text from the standard test case:\\\\
filecmp.cmp(newtxt,testtxt)


\subsection{Filtering Module}

\subsubsection{Module Inputs}
TDMS\_Data
\subsubsection{Module Outputs}
Transitions FilterData class to fully populate its state.
\subsubsection{Related Modules}
Input Data Module\\
Filtered Data Module\\
Control Module
\subsubsection{Test Data}

\subsubsection{Inputs}

\subsubsection{Expected Outputs}



\subsection{Filtered Data Module}	

\subsubsection{Module Inputs}
List
\subsubsection{Module Outputs}
List
\subsubsection{Related Modules}
Signal Transform Module\\
Filtering Module\\
Output Module
\subsubsection{Test Data}

\subsubsection{Inputs}

\subsubsection{Expected Outputs}

\end{document}
